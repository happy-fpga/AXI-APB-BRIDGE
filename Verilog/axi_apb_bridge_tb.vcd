$date
	Thu Nov 28 22:35:40 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module axi_apb_bridge_tb $end
$var wire 1 ! axi_wready $end
$var wire 1 " axi_rvalid $end
$var wire 2 # axi_rresp [1:0] $end
$var wire 32 $ axi_rdata [31:0] $end
$var wire 1 % axi_bvalid $end
$var wire 2 & axi_bresp [1:0] $end
$var wire 1 ' axi_awready $end
$var wire 1 ( axi_arready $end
$var wire 1 ) apb_pwrite $end
$var wire 32 * apb_pwdata [31:0] $end
$var wire 1 + apb_psel $end
$var wire 1 , apb_penable $end
$var wire 32 - apb_paddr [31:0] $end
$var reg 32 . apb_prdata [31:0] $end
$var reg 1 / apb_pready $end
$var reg 1 0 apb_pslverr $end
$var reg 1 1 axi_aclk $end
$var reg 32 2 axi_araddr [31:0] $end
$var reg 1 3 axi_aresetn $end
$var reg 3 4 axi_arprot [2:0] $end
$var reg 1 5 axi_arvalid $end
$var reg 32 6 axi_awaddr [31:0] $end
$var reg 3 7 axi_awprot [2:0] $end
$var reg 1 8 axi_awvalid $end
$var reg 1 9 axi_bready $end
$var reg 1 : axi_rready $end
$var reg 32 ; axi_wdata [31:0] $end
$var reg 4 < axi_wstrb [3:0] $end
$var reg 1 = axi_wvalid $end
$scope module dut $end
$var wire 32 > apb_prdata [31:0] $end
$var wire 1 / apb_pready $end
$var wire 1 0 apb_pslverr $end
$var wire 1 1 axi_aclk $end
$var wire 32 ? axi_araddr [31:0] $end
$var wire 1 3 axi_aresetn $end
$var wire 3 @ axi_arprot [2:0] $end
$var wire 1 5 axi_arvalid $end
$var wire 32 A axi_awaddr [31:0] $end
$var wire 3 B axi_awprot [2:0] $end
$var wire 1 8 axi_awvalid $end
$var wire 1 9 axi_bready $end
$var wire 1 : axi_rready $end
$var wire 32 C axi_wdata [31:0] $end
$var wire 4 D axi_wstrb [3:0] $end
$var wire 1 = axi_wvalid $end
$var reg 32 E apb_paddr [31:0] $end
$var reg 1 , apb_penable $end
$var reg 1 + apb_psel $end
$var reg 32 F apb_pwdata [31:0] $end
$var reg 1 ) apb_pwrite $end
$var reg 1 ( axi_arready $end
$var reg 1 ' axi_awready $end
$var reg 2 G axi_bresp [1:0] $end
$var reg 1 % axi_bvalid $end
$var reg 32 H axi_rdata [31:0] $end
$var reg 2 I axi_rresp [1:0] $end
$var reg 1 " axi_rvalid $end
$var reg 1 ! axi_wready $end
$var reg 32 J captured_addr [31:0] $end
$var reg 32 K captured_wdata [31:0] $end
$var reg 4 L captured_wstrb [3:0] $end
$var reg 1 M clk_enable $end
$var reg 3 N current_state [2:0] $end
$var reg 3 O next_state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 O
b0 N
0M
b0 L
b0 K
b0 J
bx I
bx H
bx G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
0=
b0 <
b0 ;
0:
09
08
b0 7
b0 6
05
b0 4
03
b0 2
01
00
0/
b0 .
b0 -
0,
0+
b0 *
0)
0(
0'
bx &
0%
bx $
bx #
0"
0!
$end
#5000
11
#10000
01
#15000
11
#20000
01
13
#25000
b10000000000000000000000000000 J
1'
1M
b1 O
19
18
b10000000000000000000000000000 6
b10000000000000000000000000000 A
11
#30000
01
#35000
b1 N
1'
b10 O
1=
b1111 <
b1111 D
b11011110101011011011111011101111 ;
b11011110101011011011111011101111 C
11
#40000
01
#45000
b1111 L
b11011110101011011011111011101111 K
1!
0'
b10 N
b11 O
1/
11
#50000
01
#55000
b0 O
b11 N
1%
b0 &
b0 G
1,
b11011110101011011011111011101111 *
b11011110101011011011111011101111 F
b10000000000000000000000000000 -
b10000000000000000000000000000 E
1)
1+
0!
11
#60000
01
#65000
0%
0,
0+
b0 N
b0 O
0/
0=
08
11
#70000
01
#75000
b100000000000000000000000000100 J
1(
b100 O
1:
b1 4
b1 @
15
b100000000000000000000000000100 2
b100000000000000000000000000100 ?
11
#80000
01
#85000
1(
b100 N
b101 O
1/
b10010001101000101011001111000 .
b10010001101000101011001111000 >
11
#90000
01
#95000
b0 O
b101 N
b10010001101000101011001111000 $
b10010001101000101011001111000 H
1"
b0 #
b0 I
1,
b100000000000000000000000000100 -
b100000000000000000000000000100 E
0)
1+
0(
11
#100000
01
#105000
b100 O
0"
0,
0+
b0 N
11
#110000
01
#115000
b100 N
b110000000000000000000000000000 J
1'
b101 O
10
18
b110000000000000000000000000000 6
b110000000000000000000000000000 A
11
#120000
01
#125000
b0 O
1"
b10 #
b10 I
1,
b110000000000000000000000000000 -
b110000000000000000000000000000 E
1+
0'
b101 N
11
#130000
01
#135000
b1 O
b0 N
0"
0,
0+
11
#140000
01
#145000
1'
b1 N
11
#150000
01
#155000
0'
11
#160000
01
#165000
11
#170000
01
#175000
11
#180000
01
#185000
11
#190000
01
#195000
11
#200000
01
#205000
11
#210000
01
#215000
11